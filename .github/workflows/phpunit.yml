name: phpunit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        php: [8.0, 8.1, 8.2]
        laravel: [8.*, 9.*, 10.*]
        include:
          -   laravel: 10.*
              testbench: 8.*
          -   laravel: 9.*
              testbench: 7.*
          -   laravel: 8.*
              testbench: 6.*
        exclude:
          -   laravel: 8.*
              php: 8.1
          -   laravel: 8.*
              php: 8.2
          -   laravel: 9.*
              php: 8.2
          -   laravel: 10.*
              php: 8.0


    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: pcov

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Cache vendor folder
        uses: actions/cache@v3
        with:
          path:
            - /vendor
            -  ~/.composer/cache/files
          key: dependencies-env-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}-${{ matrix.os }}



      - name: Install composer dependencies
        run: |
          composer --version
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer require "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update --dev
          composer update --prefer-dist --no-interaction --no-suggest --dev
          composer dump


      - name: Execute tests
        run: vendor/bin/phpunit

      - name: Upload coverage results to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require php-coveralls/php-coveralls
          php-coveralls --coverage_clover=build/logs/clover.xml -v
